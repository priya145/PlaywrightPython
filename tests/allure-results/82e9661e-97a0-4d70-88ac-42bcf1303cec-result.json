{"name": "test_user_login", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Page.click: Timeout 30000ms exceeded.\nCall log:\nwaiting for locator(\"button[type=\\\"submit\\\"]\")", "trace": "@allure.feature('User Login')\n    @allure.story('Login Functionality')\n    def test_user_login():\n        with sync_playwright() as p:\n            browser = p.chromium.launch(headless=False)  # Change to True to run tests headlessly\n            page = browser.new_page()\n    \n            try:\n                # Step 1: Navigate to the login page\n                page.goto('https://opensource-demo.orangehrmlive.com')\n                time.sleep(2)\n    \n                # Step 2: Enter a valid username and password\n                page.fill('input[name=\"username\"]', 'Admin')\n                time.sleep(1)\n                page.fill('input[name=\"password\"]', 'admin123')\n                time.sleep(1)\n    \n                # Step 3: Click on the \"Login\" button\n    \n                page.click('button[type=\"submit\"]')\n                time.sleep(3)\n>               page.click('button[type=\"submit\"]')\n\ntest_login.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\venv\\lib\\site-packages\\playwright\\sync_api\\_generated.py:9671: in click\n    self._sync(\n..\\venv\\lib\\site-packages\\playwright\\_impl\\_page.py:777: in click\n    return await self._main_frame.click(**locals_to_params(locals()))\n..\\venv\\lib\\site-packages\\playwright\\_impl\\_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n..\\venv\\lib\\site-packages\\playwright\\_impl\\_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000002470DFF9570>\ncb = <function Channel.send.<locals>.<lambda> at 0x000002470E337F40>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Page.click: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for locator(\"button[type=\\\"submit\\\"]\")\n\n..\\venv\\lib\\site-packages\\playwright\\_impl\\_connection.py:514: TimeoutError"}, "start": 1725698022415, "stop": 1725698071035, "uuid": "cfba7052-68fe-4f93-8517-c031ad08881e", "historyId": "7c55d9fafbdf687ef9746baa09fb6150", "testCaseId": "7c55d9fafbdf687ef9746baa09fb6150", "fullName": "test_login#test_user_login", "labels": [{"name": "feature", "value": "User Login"}, {"name": "story", "value": "Login Functionality"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "ZIL688"}, {"name": "thread", "value": "168036-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_login"}]}